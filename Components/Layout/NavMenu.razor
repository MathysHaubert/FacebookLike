@using FacebookLike.Service
@inject IAuthService AuthService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">FacebookLike</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>
        <div class="nav-item px-3 mt-3">
            @if (AuthService.CurrentUser != null)
            {
                <span class="fw-bold">@AuthService.CurrentUser.Username</span>
                <button class="btn btn-link nav-link" @onclick="Logout">Logout</button>
            }
            else
            {
                <NavLink class="nav-link" href="/login">Login</NavLink>
            }
        </div>
    </nav>
</div>

@code {
    protected override void OnInitialized()
    {
        AuthService.OnAuthStateChanged += StateHasChanged;
    }
    public void Dispose()
    {
        AuthService.OnAuthStateChanged -= StateHasChanged;
    }
    
    private void Logout()
    {
        AuthService.Logout();
    }
}