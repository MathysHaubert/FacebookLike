@page "/login"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager
@inject IAuthService AuthService

<div class="container-fluid min-vh-80 d-flex align-items-center justify-content-center">
    <div class="card shadow-sm" style="max-width: 400px; width: 100%;">
        <div class="card-body p-4">
            <div class="text-center mb-4">
                <h3 class="text-primary fw-bold" style="font-size: 3rem;">FacebookLike</h3>
                <h5 class="text-dark">Sign in to FacebookLike</h5>
            </div>

            <div class="login-form">
                <EditForm Model="@loginModel" OnValidSubmit="HandleLogin" formname="LoginForm">
                    <DataAnnotationsValidator/>
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger">@errorMessage</div>
                    }
                    <div class="mb-3">
                        <InputText @bind-Value="loginModel.Username" class="form-control form-control-lg"
                                   placeholder="Email address or phone number"/>
                        <ValidationMessage For="@(() => loginModel.Username)" class="text-danger small"/>
                    </div>
                    <div class="mb-3">
                        <InputText type="password" @bind-Value="loginModel.Password"
                                   class="form-control form-control-lg" placeholder="Password"/>
                        <ValidationMessage For="@(() => loginModel.Password)" class="text-danger small"/>
                    </div>

                    <button type="submit" class="btn btn-primary btn-lg w-100 mb-3">Sign in</button>
                </EditForm>
                <div class="text-center mb-3">
                    <a href="#" class="text-decoration-none">Forgot password?</a>
                </div>
                <hr class="my-3"/>
                <button type="button" class="btn btn-success btn-lg w-100"
                        @onclick="NavigateToRegister">
                    Create an account
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private string errorMessage = string.Empty;
    
    [Parameter]
    [SupplyParameterFromQuery]
    public string? ReturnUrl { get; set; }
    
    private async Task HandleLogin()
    {
        var user = await AuthService.Authenticate(loginModel.Username, loginModel.Password);
        if (user != null)
        {
            var returnUrl = ReturnUrl ?? "/";
            NavigationManager.NavigateTo(returnUrl, forceLoad: true);
        }
        else
        {
            errorMessage = "Incorrect username or password";
        }
    }

    private void NavigateToRegister()
    {
        NavigationManager.NavigateTo("/register");
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Username is required")]
        public string Username { get; set; }

        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; }
    }

} 