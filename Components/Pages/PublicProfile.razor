@page "/profile/{idParam}"
@rendermode InteractiveServer
@using System.Globalization
@using FacebookLike.Models
@using FacebookLike.Service.Neo4jService
@inject UserProfileService ProfileService
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

@code {
    [Parameter] public string? idParam { get; set; }

    private UserDetails? Profile;
    private User ProfileUser => Profile?.User;
    private bool _isLoading = true;
    private bool _isFollowing;
    private User _currentUser;
    private bool _showFollowersModal;
    private bool _showFollowingModal;
    private List<User> _followers;
    private List<User> _following;
    private bool _followersLoaded;
    private bool _followingLoaded;
    private string _bannerImageUrl;
    private bool _isOwnProfile => _currentUser?.Id == idParam;
    private bool _canViewFullProfile => _isOwnProfile || 
                                      ProfileUser?.PrivacyLevel == PrivacyLevel.Public || 
                                      (ProfileUser?.PrivacyLevel == PrivacyLevel.FriendsOnly && _isFollowing);

    protected override async Task OnParametersSetAsync()
    {
        _isLoading = true;
        Profile = null;
        _isFollowing = false;
        _currentUser = null;
        _followers = new List<User>();
        _following = new List<User>();
        _followersLoaded = false;
        _followingLoaded = false;

        if (!string.IsNullOrEmpty(idParam))
        {
            // Generate banner image using user's ID as seed
            var width = 1200;
            var height = 400;
            _bannerImageUrl = $"https://picsum.photos/seed/{idParam}/{width}/{height}";

            var currentUser = await AuthService.GetCurrentUserAsync();
            if (currentUser is null)
            {
                _isLoading = false;
                return;
            }

            _currentUser = currentUser;

            Profile = await ProfileService.GetProfileAsync(idParam, currentUser.Id);
            if (Profile is null)
            {
                _isLoading = false;
                return;
            }

            if (_currentUser.Id != ProfileUser.Id)
            {
                _isFollowing = await ProfileService.IsFollowingAsync(_currentUser.Id, idParam);
            }
        }

        _isLoading = false;
    }

    private async Task OnFollowButtonClicked()
    {
        if (_isFollowing)
        {
            await ProfileService.UnfollowAsync(_currentUser.Id, ProfileUser.Id);
            _isFollowing = false;
        }
        else
        {
            await ProfileService.FollowAsync(_currentUser.Id, ProfileUser.Id);
            _isFollowing = true;
        }

        Profile = await ProfileService.GetProfileAsync(ProfileUser.Id, _currentUser.Id);
        await InvokeAsync(StateHasChanged);
    }

    private async Task ShowFollowersModal()
    {
        if (!_followersLoaded)
        {
            _followers = await ProfileService.GetFollowersAsync(idParam);
            _followersLoaded = true;
        }

        _showFollowersModal = true;
    }

    private async Task ShowFollowingModal()
    {
        if (!_followingLoaded)
        {
            _following = await ProfileService.GetFollowingAsync(idParam);
            _followingLoaded = true;
        }

        _showFollowingModal = true;
    }

    private void CloseFollowersModal()
    {
        _showFollowersModal = false;
    }

    private void CloseFollowingModal()
    {
        _showFollowingModal = false;
    }

    private async Task OnModalBackdropClick()
    {
        if (_showFollowersModal)
        {
            CloseFollowersModal();
        }
        else if (_showFollowingModal)
        {
            CloseFollowingModal();
        }
    }

}

@if (_isLoading)
{
    <div class="text-center mt-5">
        <div class="spinner-border" role="status"></div>
    </div>
}
else if (Profile is null)
{
    <div class="text-center mt-5">
        <h4>Profile not found</h4>
        <p>The user doesn't exist or has been deleted.</p>
    </div>
}
else
{
    <div class="profile-page">
        <!-- Banner -->
        <div class="banner-container">
            <img src="@_bannerImageUrl" alt="Profile banner" class="banner-image"/>
            <div class="banner-overlay"></div>
        </div>

        <!-- Cover & Avatar -->
        <div class="position-relative">
            <div class="container mt-5">
                <div class="d-flex align-items-center gap-4">
                    <ProfileImage User="@ProfileUser" Size="120" clazz="rounded-circle"
                                  style="border: 4px solid white;"/>
                    <div>
                        <h2 class="mb-1 fw-bold">@ProfileUser.FirstName @ProfileUser.LastName</h2>
                        @if (_canViewFullProfile)
                        {
                            <small class="text-muted">
                                @Profile.FollowersCount.ToString("N0", CultureInfo.InvariantCulture) followers
                            </small>
                        }
                    </div>
                </div>

                <div class="mt-3 d-flex gap-2">
                    @if (_isOwnProfile)
                    {
                        <button class="btn btn-secondary d-flex align-items-center gap-1"
                                onclick="@(() => NavigationManager.NavigateTo("/edit-profile"))">
                            <i class="bi bi-gear-fill"></i>
                            <text>Edit Profile</text>
                        </button>
                    }
                    else if (_canViewFullProfile)
                    {
                        <button class="btn btn-primary d-flex align-items-center gap-1"
                                onclick="@OnFollowButtonClicked">
                            @if (_isFollowing)
                            {
                                <i class="bi bi-person-check-fill"></i>
                                <text>Following</text>
                            }
                            else
                            {
                                <i class="bi bi-person-plus-fill"></i>
                                <text>Follow</text>
                            }
                        </button>
                    }
                </div>
            </div>
        </div>

        @if (_canViewFullProfile)
        {
            <div class="container">
                <div class="mt-4">
                    <div class="row">
                        <div class="col-12">
                            @if (!string.IsNullOrEmpty(ProfileUser.Bio))
                            {
                                <p class="mb-3">@ProfileUser.Bio</p>
                            }

                            <!-- Stats Cards -->
                            <div class="row mb-4">
                                <div class="col-md-3 col-6 mb-3">
                                    <div class="card bg-primary text-white h-100" style="cursor: pointer;"
                                         @onclick="ShowFollowersModal">
                                        <div class="card-body text-center">
                                            <i class="bi bi-people-fill fs-1 mb-2"></i>
                                            <h3 class="mb-0">@Profile.FollowersCount</h3>
                                            <small>Followers</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3 col-6 mb-3">
                                    <div class="card bg-success text-white h-100" style="cursor: pointer;"
                                         @onclick="ShowFollowingModal">
                                        <div class="card-body text-center">
                                            <i class="bi bi-person-plus-fill fs-1 mb-2"></i>
                                            <h3 class="mb-0">@Profile.FollowingCount</h3>
                                            <small>Following</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3 col-6 mb-3">
                                    <div class="card bg-info text-white h-100">
                                        <div class="card-body text-center">
                                            <i class="bi bi-chat-dots-fill fs-1 mb-2"></i>
                                            <h3 class="mb-0">@(Profile.Posts?.Count ?? 0)</h3>
                                            <small>Posts</small>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Profile Info with Icons -->
                            <div class="card shadow-sm mb-4">
                                <div class="card-body">
                                    <h5 class="card-title mb-3">
                                        <i class="bi bi-person-lines-fill text-primary me-2"></i>
                                        About
                                    </h5>
                                    <div class="d-flex flex-wrap gap-4">
                                        @if (!string.IsNullOrEmpty(ProfileUser.Work))
                                        {
                                            <div class="d-flex align-items-center gap-2">
                                                <i class="bi bi-briefcase text-primary"></i>
                                                <span>Works as @ProfileUser.Work</span>
                                            </div>
                                        }

                                        @if (!string.IsNullOrEmpty(ProfileUser.WorksAt))
                                        {
                                            <div class="d-flex align-items-center gap-2">
                                                <i class="bi bi-building text-primary"></i>
                                                <span>at @ProfileUser.WorksAt</span>
                                            </div>
                                        }

                                        @if (!string.IsNullOrEmpty(ProfileUser.Studies))
                                        {
                                            <div class="d-flex align-items-center gap-2">
                                                <i class="bi bi-book text-primary"></i>
                                                <span>Studied at @ProfileUser.Studies</span>
                                            </div>
                                        }

                                        @if (!string.IsNullOrEmpty(ProfileUser.LivesIn))
                                        {
                                            <div class="d-flex align-items-center gap-2">
                                                <i class="bi bi-geo-alt text-primary"></i>
                                                <span>Lives in @ProfileUser.LivesIn</span>
                                            </div>
                                        }

                                        @if (!string.IsNullOrEmpty(ProfileUser.Relationship))
                                        {
                                            <div class="d-flex align-items-center gap-2">
                                                <i class="bi bi-heart text-primary"></i>
                                                <span>@ProfileUser.Relationship</span>
                                            </div>
                                        }

                                        <div class="d-flex align-items-center gap-2">
                                            <i class="bi bi-calendar3 text-primary"></i>
                                            <span>Born on @ProfileUser.DateOfBirth.ToString("MMMM d, yyyy")</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Activity Timeline -->
                            <div class="card shadow-sm mb-4">
                                <div class="card-body">
                                    <h5 class="card-title mb-3">
                                        <i class="bi bi-activity text-primary me-2"></i>
                                        Recent Activity
                                    </h5>
                                    <div class="timeline">
                                        @if (Profile.Posts?.Any() == true)
                                        {
                                            @foreach (var post in Profile.Posts.Take(3))
                                            {
                                                <div class="timeline-item">
                                                    <div class="timeline-marker"></div>
                                                    <div class="timeline-content">
                                                        <h6 class="mb-1">@post.Post.Content.Substring(0, Math.Min(50, post.Post.Content.Length))...</h6>
                                                        <small
                                                            class="text-muted">@post.Post.CreatedAt.ToString("MMM dd, yyyy")</small>
                                                    </div>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <p class="text-muted">No recent activity</p>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <ul class="nav nav-tabs mt-4 overflow-auto" style="scrollbar-width: none;">
                    <li class="nav-item"><a class="nav-link active" href="#">Posts</a></li>
                </ul>

                <PostList Posts="Profile.Posts" CurrentUser="_currentUser"/>
            </div>
        }
        else
        {
            <div class="container mt-4">
                <div class="card shadow-sm">
                    <div class="card-body text-center">
                        <i class="bi bi-lock-fill fs-1 text-muted mb-3"></i>
                        <h4>This Profile is Private</h4>
                        <p class="text-muted">
                            @if (ProfileUser.PrivacyLevel == PrivacyLevel.Private)
                            {
                                <text>This user has set their profile to private.</text>
                            }
                            else if (ProfileUser.PrivacyLevel == PrivacyLevel.FriendsOnly)
                            {
                                <text>This user only shares their profile with friends.</text>
                            }
                        </p>
                        @if (!_isFollowing && ProfileUser.PrivacyLevel == PrivacyLevel.FriendsOnly)
                        {
                            <button class="btn btn-primary mt-3" @onclick="OnFollowButtonClicked">
                                <i class="bi bi-person-plus-fill me-2"></i>Follow to View Profile
                            </button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}

@if (_showFollowersModal)
{
    <div class="modal fade show" style="display: block;" tabindex="-1">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Followers</h5>
                    <button type="button" class="btn-close" @onclick="CloseFollowersModal"></button>
                </div>
                <div class="modal-body">
                    @if (_followers.Any())
                    {
                        <div class="list-group">
                            @foreach (var follower in _followers)
                            {
                                <a href="/profile/@follower.Id"
                                   class="list-group-item list-group-item-action d-flex align-items-center gap-3">
                                    <ProfileImage User="@follower" Size="40" clazz="rounded-circle"/>
                                    <div>
                                        <h6 class="mb-0">@follower.FirstName @follower.LastName</h6>
                                        <small class="text-muted">@follower.Username</small>
                                    </div>
                                </a>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted text-center">No followers yet</p>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show" @onclick="OnModalBackdropClick"></div>
}

@if (_showFollowingModal)
{
    <div class="modal fade show" style="display: block;" tabindex="-1">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Following</h5>
                    <button type="button" class="btn-close" @onclick="CloseFollowingModal"></button>
                </div>
                <div class="modal-body">
                    @if (_following.Any())
                    {
                        <div class="list-group">
                            @foreach (var following in _following)
                            {
                                <a href="/profile/@following.Id"
                                   class="list-group-item list-group-item-action d-flex align-items-center gap-3">
                                    <ProfileImage User="@following" Size="40" clazz="rounded-circle"/>
                                    <div>
                                        <h6 class="mb-0">@following.FirstName @following.LastName</h6>
                                        <small class="text-muted">@following.Username</small>
                                    </div>
                                </a>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted text-center">Not following anyone yet</p>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show" @onclick="OnModalBackdropClick"></div>
}

<style>
    /* Hide scrollbar for Firefox */
    .nav-tabs {
        scrollbar-width: none;
    }

    /* For WebKit */
    .nav-tabs::-webkit-scrollbar {
        display: none;
    }

    /* Timeline styles */
    .timeline {
        position: relative;
        padding: 20px 0;
    }

    .timeline-item {
        position: relative;
        padding-left: 40px;
        margin-bottom: 20px;
    }

    .timeline-marker {
        position: absolute;
        left: 0;
        top: 0;
        width: 15px;
        height: 15px;
        border-radius: 50%;
        background: var(--bs-primary);
        border: 3px solid #fff;
        box-shadow: 0 0 0 2px var(--bs-primary);
    }

    .timeline-item:not(:last-child)::before {
        content: '';
        position: absolute;
        left: 7px;
        top: 15px;
        height: calc(100% + 5px);
        width: 2px;
        background: var(--bs-primary);
    }

    .timeline-content {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
    }

    /* Card hover effects */
    .card {
        transition: transform 0.2s ease-in-out;
    }

    .card:hover {
        transform: translateY(-5px);
    }

    /* Icon animations */
    .bi {
        transition: transform 0.2s ease-in-out;
    }

    .card:hover .bi {
        transform: scale(1.2);
    }

    /* Modal styles */
    .modal {
        background-color: rgba(0, 0, 0, 0.5);
        display: flex !important;
        align-items: center;
        justify-content: center;
    }

    .modal-dialog {
        margin: 0;
        max-width: 500px;
        width: 90%;
    }

    .modal-backdrop {
        background-color: rgba(0, 0, 0, 0.5);
        cursor: pointer;
    }

    .modal-content {
        cursor: default;
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }

    .modal-header {
        border-top-left-radius: 12px;
        border-top-right-radius: 12px;
        background-color: #f8f9fa;
    }

    .list-group-item {
        transition: background-color 0.2s ease-in-out;
    }

    .list-group-item:hover {
        background-color: #f8f9fa;
    }

    /* Banner styles */
    .banner-container {
        position: relative;
        width: 100%;
        height: 400px;
        overflow: hidden;
    }

    .banner-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
    }

    .banner-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(to bottom, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.4));
    }

    /* Adjust profile section position */
    .profile-page {
        position: relative;
    }

    .container.mt-5 {
        position: relative;
        z-index: 1;
    }
</style>
