@page "/"
@using FacebookLike.Models
@using FacebookLike.Services
@inject IPostService PostService

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <!-- Zone de création de post -->
            <div class="card mb-4">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <img src="https://picsum.photos/seed/profile1/40/40" class="rounded-circle me-2" width="40" height="40" alt="Profile" />
                        <input type="text" class="form-control" placeholder="Quoi de neuf ?" />
                    </div>
                    <hr />
                    <div class="d-flex justify-content-between">
                        <button class="btn btn-light">
                            <i class="bi bi-camera-video"></i> Vidéo en direct
                        </button>
                        <button class="btn btn-light">
                            <i class="bi bi-images"></i> Photo
                        </button>
                        <button class="btn btn-light">
                            <i class="bi bi-emoji-smile"></i> Humeur
                        </button>
                    </div>
                </div>
            </div>

            <!-- Liste des posts -->
            @foreach (var post in posts)
            {
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="d-flex align-items-center mb-3">
                            <img src="https://picsum.photos/seed/@post.Author.Username/40/40" class="rounded-circle me-2" width="40" height="40" alt="@post.Author.Username" />
                            <div>
                                <h6 class="mb-0">@post.Author.Username</h6>
                                <small class="text-muted">@FormatTime(post.CreatedAt)</small>
                            </div>
                        </div>
                        <p class="card-text">@post.Content</p>
                        @if (!string.IsNullOrEmpty(post.ImageUrl))
                        {
                            <img src="@post.ImageUrl" class="img-fluid rounded mb-3" alt="Post image" />
                        }
                        else
                        {
                            <img src="https://picsum.photos/seed/@post.Id/800/400" class="img-fluid rounded mb-3" alt="Post image" />
                        }
                        <div class="d-flex justify-content-between text-muted mb-2">
                            <span>@post.LikesCount J'aime</span>
                            <span>@post.CommentsCount commentaires</span>
                        </div>
                        <hr />
                        <div class="d-flex justify-content-between">
                            <button class="btn btn-light w-100 me-2" @onclick="() => ToggleLike(post)">
                                <i class="bi @(post.IsLiked ? "bi-heart-fill text-danger" : "bi-heart")"></i>
                                J'aime
                            </button>
                            <button class="btn btn-light w-100">
                                <i class="bi bi-chat"></i>
                                Commenter
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<Post> posts;

    protected override void OnInitialized()
    {
        posts = PostService.GetPosts();
    }

    private void ToggleLike(Post post)
    {
        if (post.IsLiked)
        {
            PostService.UnlikePost(post.Id);
        }
        else
        {
            PostService.LikePost(post.Id);
        }
    }

    private string FormatTime(DateTime dateTime)
    {
        var timeSpan = DateTime.Now - dateTime;
        
        if (timeSpan.TotalMinutes < 1)
            return "À l'instant";
        if (timeSpan.TotalMinutes < 60)
            return $"Il y a {(int)timeSpan.TotalMinutes} minute(s)";
        if (timeSpan.TotalHours < 24)
            return $"Il y a {(int)timeSpan.TotalHours} heure(s)";
        if (timeSpan.TotalDays < 7)
            return $"Il y a {(int)timeSpan.TotalDays} jour(s)";
        
        return dateTime.ToString("dd/MM/yyyy");
    }
}